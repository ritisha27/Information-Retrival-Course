# -*- coding: utf-8 -*-
"""IR_Assignment3_Q2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o-QbxONUfQdAQLq5qw-nhuG3zvW5dEVe
"""

!wget 'https://snap.stanford.edu/data/p2p-Gnutella05.txt.gz'

import networkx as nx
import pandas as pd
import matplotlib.pyplot as plt

# Load the dataset from URL
url = "/content/p2p-Gnutella05.txt.gz"
G = nx.read_edgelist(url, comments="#", delimiter="\t", create_using=nx.DiGraph)

"""# **PageRank score for each node**"""

# Compute the PageRank score for each node in the network
pagerank_scores = nx.pagerank(G)

sorted_dict = {}
pagerank_scores = {int(key): value for key, value in pagerank_scores.items()}
for key in sorted(pagerank_scores.keys()):
  sorted_dict[key] = pagerank_scores[key]

# Print the PageRank score for each node in the network
for index, (node, score) in enumerate(sorted_dict.items()):
  if index < 51:
    print(f"Node: {node}, Pagerank Score: {score}")
  else:
    break

"""# **Authority and Hub score for each node**"""

authority_scores, hub_scores = nx.hits(G)

sorted_authority_dict, sorted_hub_dict = {}, {}

hub_scores = {int(key): value for key, value in hub_scores.items()}
authority_scores = {int(key): value for key, value in authority_scores.items()}

for key in sorted(hub_scores.keys()): sorted_hub_dict[key] = hub_scores[key]
for key in sorted(authority_scores.keys()): sorted_authority_dict[key] = authority_scores[key]

for index, (node, score) in enumerate(sorted_authority_dict.items()):
  if index < 51:
    print(f"Node: {node}, Authority Score: {score}, Hub Score: {hub_scores[node]}")
  else:
    break